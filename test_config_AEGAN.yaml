#path to the checkpoint file containinf the refine model
refine_model_path: '/media/mingjian/NewVolume/DATA_Jane/low_to_high_PET/Dmix_dataset/check_points/3DGAN_ARNet_Con_uExplorer_ForDRF100/refine_best_checkpoint.pytorch'
#refine model configuration
refine_model:
  # model class, e.g. UNet3D, ResidualUNet3D
  name: AENet
   # number of input channels to the model
  in_channels: 1
  # number of output channels
  out_channels: 1
# path to the checkpoint file containing the model
model_path: "/media/mingjian/NewVolume/DATA_Jane/low_to_high_PET/Dmix_dataset/check_points/3DGAN_ARNet_Con_uExplorer_ForDRF100/best_checkpoint.pytorch"
# model configuration
model:
  # model class, e.g. UNet3D, ResidualUNet3D
  # name: Generator
  # number of input channels to the model
  in_channels: 1
  # number of output channels
  out_channels: 1
  # of gen filters in first conv layer
  ngf: 64
  # determines the generator type
  which_model_netG: unet_32
  #use dropput
  use_dropout: true

predictor:
  # standard in memory predictor
  name: 'StandardPredictor'
# specify the test datasets
loaders:
  # batch dimension; if number of GPUs is N > 1, then a batch_size of N * batch_size will automatically be taken for DataParallel
  batch_size: 1
  # mirror pad the raw data in each axis for sharper prediction near the boundaries of the volume
  mirror_padding: [16, 32, 32]
  # path to the raw data within the H5
  raw_internal_path: raw
  # path to the preliminary results
  # how many subprocesses to use for data loading
  num_workers: 2
  # save path of output
  dataset: LazyHDF5Dataset
  output_dir: /media/mingjian/NewVolume/DATA_Jane/low_to_high_PET/Dmix_dataset/output/3DGAN_ARNet_Con_uExplorer_ForDRF100
  test:
    # paths to the test datasets; if a given path is a directory all H5 files ('*.h5', '*.hdf', '*.hdf5', '*.hd5')
    # inside this this directory will be included as well (non-recursively)
    file_paths:
      - /media/mingjian/NewVolume/DATA_Jane/low_to_high_PET/Dmix_dataset/test
    # SliceBuilder configuration, i.e. how to iterate over the inp/media/mingjian/NewVolume/DATA_Jane/low_to_high_PET/Dmixed_datasetut volume patch-by-patch
    slice_builder:
      # SliceBuilder class
      name: SliceBuilder
      # train patch size given to the network (adapt to fit in your GPU mem, generally the bigger patch the better)
      patch_shape: [16, 256, 256]
      # train stride between patches
      stride_shape: [8, 56, 56]

    transformer:
        raw:
          # apply min-max scaling and map the input to [-1, 1]
          # - name: Normalize
          #   min_value: -1
          #   max_value: 1
          - name: ToTensor
            expand_dims: true